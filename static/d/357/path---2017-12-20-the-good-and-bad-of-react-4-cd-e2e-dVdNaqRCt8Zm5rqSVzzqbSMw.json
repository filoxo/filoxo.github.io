{"data":{"mdx":null,"markdownRemark":{"__typename":"MarkdownRemark","html":"<p>I've yet to reach the point in my career where I'm attached to a single framework. I've used Angular 2+ heavily for the last year at work, have recently rewritten and Angular 1 app in React, and have chosen to use Vue for my personal projects for now. These are some of my thoughts on what I found to be some good and bad parts of React.</p>\n<h3>The Good</h3>\n<ul>\n<li>An extremely healthy ecosystem exists around React. This is honestly the biggest win that I love as a developer. Sharable components, alternative libs, build toolkits, and even React alternatives are </li>\n<li>Testing is amazingly easy, Enzyme's shallow render is awesome!</li>\n<li>‎small components</li>\n<li>‎Plays nicely with existing js libs, as well as modules</li>\n<li>Tooling is great, be able interact with your components, data stores is so nice</li>\n</ul>\n<h3>The Bad</h3>\n<ul>\n<li>decision fatigue</li>\n<li>‎Requires understanding of some FP concepts</li>\n<li>‎HOCs get out of control</li>\n</ul>\n<h2>Conclusion</h2>","frontmatter":{"title":"The 👍 and 👎 parts of React","date":"Nov 30, 2017","tags":["react"]}}},"pageContext":{"slug":"/2017-12-20-the-good-and-bad-of-react/"}}