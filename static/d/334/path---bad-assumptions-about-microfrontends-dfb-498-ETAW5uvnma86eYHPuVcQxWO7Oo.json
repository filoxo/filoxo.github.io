{"data":{"mdx":{"code":{"body":"function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nconst layoutProps = {};\nreturn class MDXContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.layout = null;\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      components\n    } = _this$props,\n          props = _objectWithoutProperties(_this$props, [\"components\"]);\n\n    return React.createElement(MDXTag, {\n      name: \"wrapper\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `I find it kind of amazing how many bad assumptions are being made about microfrontends. Like, really, just stop for a minute. Think a little harder. I get that microservices in the browser (I prefer this term over microfrontends) are a totally new paradigm but don't make totally bad assumptions. I'll tackle some of these in this post. `), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Multiple frameworks`), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `The idea really is that you might build a React app and I build a Vue app and we'll slap 'em together on the same page. I definitely come from an era where we laughed-then-winced when we found sites that used multiple versions of jQuery on the same page... We winced because that was a bucket full of JavaScript, mostly duplicated for no reason, causing bugs and slowing down the page. This doesn't seem all that much different.`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `-`, ` Chris Coyier, `, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://css-tricks.com/micro-frontends/\"\n      }\n    }, `https://css-tricks.com/micro-frontends/`))), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `This is actually a `, React.createElement(MDXTag, {\n      name: \"strong\",\n      components: components,\n      parentName: \"p\"\n    }, `huge`), ` mischaracterization. Think about this for backend services. Because each app is isolated it `, React.createElement(MDXTag, {\n      name: \"em\",\n      components: components,\n      parentName: \"p\"\n    }, `can`), ` use a different framework or language, so one service can be Ruby+Rails and another use Elixir+Phoenix. `), React.createElement(MDXTag, {\n      name: \"blockquote\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"p\",\n      components: components,\n      parentName: \"blockquote\"\n    }, `Your `, `[developers]`, ` were so preoccupied with whether or not they could, they didnâ€™t stop to think if they should.`)), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `Multiple React roots`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://twitter.com/dan_abramov/status/1139157092420505600\"\n      }\n    }, `https://twitter.com/dan_abramov/status/1139157092420505600`)), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, `Vendor lock-in, no upgrade or migration path.`), React.createElement(MDXTag, {\n      name: \"h2\",\n      components: components\n    }, `50Mb of javascript`), React.createElement(MDXTag, {\n      name: \"p\",\n      components: components\n    }, React.createElement(MDXTag, {\n      name: \"a\",\n      components: components,\n      parentName: \"p\",\n      props: {\n        \"href\": \"https://twitter.com/TheLarkInn/status/1139281821810618369\"\n      }\n    }, `https://twitter.com/TheLarkInn/status/1139281821810618369`)));\n  }\n\n}"},"frontmatter":{"title":"Bad Assumptions about Microfrontends","date":"Jul 20, 2019","tags":["javascript","a11y"]}}},"pageContext":{"slug":"/bad-assumptions-about-microfrontends/"}}