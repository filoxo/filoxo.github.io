{"version":3,"sources":["webpack:///./src/components/post-preview.js","webpack:///./src/pages/index.js","webpack:///./src/components/sr-text.js","webpack:///./src/components/theme-toggle.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostPreview","_ref","post","react_default","a","createElement","className","styles","heading","title","gatsby_browser_entry","to","fields","slug","frontmatter","date","prev","excerpt","linkBtn","__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","posts","data","allMdx","edges","layout","filter","node","map","_ref2","key","id","SrText","children","srText","THEME","ThemeToggle","props","_useState","useState","darkModeEnabled","setDarkModeEnabled","useEffect","localStorage","getItem","setItem","document","body","classList","toggle","Object","assign","type","themeToggle","aria-pressed","aria-label","onClick","Header","siteTitle","headerContainer","headerContent","headerTitle","headerLink","flexRow","menuIcons","href","rel","target","index_esm","size","style","marginLeft","defaultProps","Layout","query","render","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","header","margin","maxWidth","padding","_755544856"],"mappings":"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","file":"component---src-pages-index-js-c87d34af08a4049769be.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styles from './post.module.css'\nimport {linkBtn} from '../components/link.module.css'\n\nexport default function PostPreview({ post }) {\n  return (\n    <div className={styles.post}>\n      <div className={styles.heading}>\n        <h2 className={styles.title}>\n          <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n        </h2>\n        <div className={styles.date}>{post.frontmatter.date}</div>\n      </div>\n      <div className={styles.prev}>\n        <p>{post.excerpt}</p>\n        <Link className={linkBtn} to={post.fields.slug}>\n          Read more\n        </Link>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport PostPreview from '../components/post-preview'\n\nconst IndexPage = ({ data }) => {\n  const { edges: posts } = data.allMdx\n  return (\n    <Layout>\n      {posts\n        .filter((post) => post.node.frontmatter.title)\n        .map(({ node: post }) => (\n          <PostPreview post={post} key={post.id} />\n        ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nimport styles from './sr-text.module.css'\n\nexport default function SrText({ children }) {\n  return <span className={styles.srText}>{children}</span>\n}\n","import React, { useState, useEffect } from 'react'\nimport styles from './theme-toggle.module.css'\n\nconst THEME = 'dark-theme-enabled'\n\nexport default function ThemeToggle(props) {\n  const [darkModeEnabled, setDarkModeEnabled] = useState(false)\n\n  useEffect(() => {\n    // Have to do this here instead of useState because of Gatbsy ssr\n    setDarkModeEnabled(localStorage.getItem(THEME) === 'true')\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(THEME, darkModeEnabled)\n    document.body.classList.toggle('dark', darkModeEnabled)\n  }, [darkModeEnabled])\n\n  return (\n    <button\n      {...props}\n      type=\"button\"\n      className={styles.themeToggle}\n      aria-pressed={darkModeEnabled}\n      aria-label=\"Toggle dark theme\"\n      onClick={() => setDarkModeEnabled(!darkModeEnabled)}\n    ></button>\n  )\n}\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport { FaGithubAlt, FaLinkedin, FaTwitter } from 'react-icons/fa'\n\nimport SrText from './sr-text'\nimport styles from './header.module.css'\nimport ThemeToggle from './theme-toggle'\n\nconst Header = ({ siteTitle }) => (\n  <div className={styles.headerContainer}>\n    <div className={styles.headerContent}>\n      <h1 className={styles.headerTitle}>\n        <Link className={styles.headerLink} to=\"/\">\n          {siteTitle}\n        </Link>\n      </h1>\n      <div className={styles.flexRow}>\n        <ul className={styles.menuIcons}>\n          <li>\n            <a\n              href=\"https://twitter.com/cfiloteo12\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <FaTwitter size={20} />\n              <SrText>Follow me as @cfiloteo12 on Twitter</SrText>\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://github.com/filoxo\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <FaGithubAlt size={20} />\n              <SrText>Checkout my Github profile (@filoxo)</SrText>\n            </a>\n          </li>\n          <li>\n            <a\n              href=\"https://www.linkedin.com/in/carlosfiloteo/\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <FaLinkedin size={20} />\n              <SrText>Let's connect on LinkedIn</SrText>\n            </a>\n          </li>\n        </ul>\n        <ThemeToggle style={{ marginLeft: '1.5rem' }} />\n      </div>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'My thoughts on development and other stuff.',\n            },\n            { name: 'keywords', content: 'javascript, development, blog' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0 .5rem 1.45rem',\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}