{"version":3,"sources":["webpack:///./src/components/post-preview.js","webpack:///./src/pages/index.js"],"names":["PostPreview","post","className","styles","heading","title","to","fields","slug","frontmatter","date","prev","excerpt","linkBtn","IndexPage","posts","data","allMdx","edges","filter","node","map","key","id","pageQuery"],"mappings":"iKAMe,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OACE,yBAAKC,UAAWC,IAAOF,MACrB,yBAAKC,UAAWC,IAAOC,SACrB,wBAAIF,UAAWC,IAAOE,OACpB,kBAAC,OAAD,CAAMC,GAAIL,EAAKM,OAAOC,MAAOP,EAAKQ,YAAYJ,QAEhD,yBAAKH,UAAWC,IAAOO,MAAOT,EAAKQ,YAAYC,OAEjD,yBAAKR,UAAWC,IAAOQ,MACrB,2BAAIV,EAAKW,SACT,kBAAC,OAAD,CAAMV,UAAWW,UAASP,GAAIL,EAAKM,OAAOC,MAA1C,eCjBR,0CAmBeM,UAbG,SAAC,GAAc,IAChBC,EADe,EAAXC,KACWC,OAAtBC,MACR,OACE,kBAAC,IAAD,KACGH,EACEI,QAAO,SAAClB,GAAD,OAAUA,EAAKmB,KAAKX,YAAYJ,SACvCgB,KAAI,gBAASpB,EAAT,EAAGmB,KAAH,OACH,kBAACpB,EAAD,CAAaC,KAAMA,EAAMqB,IAAKrB,EAAKsB,UAP7C,IAeaC,EAAS","file":"component---src-pages-index-js-c18f39a66160714f1fb8.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport styles from './post.module.css'\nimport {linkBtn} from '../components/link.module.css'\n\nexport default function PostPreview({ post }) {\n  return (\n    <div className={styles.post}>\n      <div className={styles.heading}>\n        <h2 className={styles.title}>\n          <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n        </h2>\n        <div className={styles.date}>{post.frontmatter.date}</div>\n      </div>\n      <div className={styles.prev}>\n        <p>{post.excerpt}</p>\n        <Link className={linkBtn} to={post.fields.slug}>\n          Read more\n        </Link>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport PostPreview from '../components/post-preview'\n\nconst IndexPage = ({ data }) => {\n  const { edges: posts } = data.allMdx\n  return (\n    <Layout>\n      {posts\n        .filter((post) => post.node.frontmatter.title)\n        .map(({ node: post }) => (\n          <PostPreview post={post} key={post.id} />\n        ))}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          excerpt(pruneLength: 250)\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}