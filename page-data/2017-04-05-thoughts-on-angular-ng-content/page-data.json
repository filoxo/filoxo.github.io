{"componentChunkName":"component---src-templates-post-js","path":"/2017-04-05-thoughts-on-angular-ng-content/","webpackCompilationHash":"69a64a7399a1ad7a2bef","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Thoughts on Angular: Ng-Content\",\n  \"date\": \"2017-04-05T00:00:00.000Z\",\n  \"tags\": [\"angular\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"span\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"gatsby-resp-image-wrapper\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"marginLeft\": \"auto\",\n      \"marginRight\": \"auto\",\n      \"maxWidth\": \"590px\"\n    }\n  }), \"\\n      \", mdx(\"a\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"gatsby-resp-image-link\",\n    \"href\": \"/static/dc2c93139ddaf804036841d8b81506a3/c35de/bldg-angle.jpg\",\n    \"style\": {\n      \"display\": \"block\"\n    },\n    \"target\": \"_blank\",\n    \"rel\": [\"noopener\"]\n  }), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-background-image\",\n    \"style\": {\n      \"paddingBottom\": \"33.33333333333333%\",\n      \"position\": \"relative\",\n      \"bottom\": \"0px\",\n      \"left\": \"0px\",\n      \"backgroundSize\": \"cover\",\n      \"display\": \"block\"\n    }\n  })), \"\\n  \", mdx(\"img\", _extends({\n    parentName: \"a\"\n  }, {\n    \"className\": \"gatsby-resp-image-image\",\n    \"alt\": \"Image of building angles\",\n    \"title\": \"Image of building angles\",\n    \"src\": \"/static/dc2c93139ddaf804036841d8b81506a3/c739e/bldg-angle.jpg\",\n    \"srcSet\": [\"/static/dc2c93139ddaf804036841d8b81506a3/8ee9c/bldg-angle.jpg 148w\", \"/static/dc2c93139ddaf804036841d8b81506a3/ebbe7/bldg-angle.jpg 295w\", \"/static/dc2c93139ddaf804036841d8b81506a3/c739e/bldg-angle.jpg 590w\", \"/static/dc2c93139ddaf804036841d8b81506a3/5413e/bldg-angle.jpg 885w\", \"/static/dc2c93139ddaf804036841d8b81506a3/4efde/bldg-angle.jpg 1180w\", \"/static/dc2c93139ddaf804036841d8b81506a3/c35de/bldg-angle.jpg 1200w\"],\n    \"sizes\": \"(max-width: 590px) 100vw, 590px\"\n  })), \"\\n  \"), \"\\n    \")), mdx(\"p\", null, \"I recently came across some interesting behavior with Angular's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ng-content\"), \" that I wanted to jot down so I can search for some answers. NgContent isn't well documented.\"), mdx(\"h3\", null, \"Why isn't \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"ng-content\"), \" self-closing?\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ng-content\"), \" is to be used like any other element. This is great, especially for rendering in default content. For example, a component that can transclude some content but if for some reason nothing is nested into it, it will show a default state.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<profile-card>\\n    <ng-content>\\n        <img src=\\\"/defaultProfile.jpg\\\"/>\\n        <p>Unknown</p>\\n    </ng-content>\\n</profile-card>\\n\")), mdx(\"p\", null, \"But what if you don't need anything within the opening and closing tags? You'd think that just \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ng-content />\"), \" would be a nice and simple way to signal where to place the included content, but attempting to do so generates the following error:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Template parse errors: Only void and foreign elements can be self closed \\\"ng-content\\\"\\n[ERROR ->]<ng-content />\\n\")), mdx(\"p\", null, \"Seems weird to me. This may be by design.\"), mdx(\"h3\", null, \"Select is only able to find immediate children?\"), mdx(\"p\", null, \"One of the features of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ng-content\"), \" is that you can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"select\"), \" attribute on it to pull transcluded content into a specific location.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<!-- my-component.html -->\\n<div>\\n    <ng-content select=\\\".title\\\"></ng-content>\\n    <ng-content select=\\\".subtitle\\\"></ng-content>\\n</div>\\n\")), mdx(\"p\", null, \"This is great for enforcing layout in a specific way. Except... it has a \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"major\"), \" caveat, at least in my opinion. This select only seems to match \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"immediate children only\"), \", nothing else.\"), mdx(\"p\", null, \"So using the above \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"my-component\"), \", this belwo works while placing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"title\"), \" above the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"subtitle\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<my-component>\\n    <p class=\\\"subtitle\\\">world</p>\\n    <h2 class=\\\"title\\\">Hello</h2>\\n</my-component>\\n\")), mdx(\"p\", null, \"but then this doesn't! Nothing is rendered.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<my-component>\\n    <div>\\n        <h2 class=\\\"title\\\">Hello</h2>\\n        <p class=\\\"subtitle\\\">world</p>\\n    </div>\\n</my-component>\\n\")), mdx(\"p\", null, \"It can't find these same elements because they're wrapped in an extra div? I would have thought that it would match those elements as well, just like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"querySelector\"), \" or CSS selectors would. If I only wanted immediate children I would have used something like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"select=\\\"> .title\\\"\"), \". My assumption that it used standard selectors is wrong? \\uD83E\\uDD37\\u200D\\u2642\\uFE0F That sucks.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Thoughts on Angular: Ng-Content","date":"Apr 05, 2017","tags":["angular"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2017-04-05-thoughts-on-angular-ng-content/"}}}