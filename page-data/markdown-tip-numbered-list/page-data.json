{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/markdown-tip-numbered-list/",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Markdown tip: numbered list\",\n  \"date\": \"2021-11-29T00:00:00.000Z\",\n  \"tags\": [\"markdown\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Inspired by this awesome tweet\"), mdx(\"blockquote\", {\n    className: \"twitter-tweet\"\n  }, mdx(\"p\", {\n    lang: \"en\",\n    dir: \"ltr\"\n  }, \"TIL in (some?) Markdown you can double backtick your inline code examples if they have backticks in them to escape the backticks in the examples.\", mdx(\"br\", null), mdx(\"br\", null), \"This works nicely, for example:\", mdx(\"br\", null), \"``Returns `[TYPE]` - (Return description)``\"), \"\\u2014 Tierney Cyren (@bitandbang)\\xA0\", mdx(\"a\", {\n    href: \"https://twitter.com/bitandbang/status/1465449271528808448?ref_src=twsrc%5Etfw\"\n  }, \"November 29, 2021\")), mdx(\"p\", null, \"I remembered a tip I learned from a friend I once worked with, and I've been able to pass along too. When writing a numbered list, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.\"), \" as every item in list. All browsers will render the ordered list in the correct numerical sequence, and you won't need to try to reorganize them manually ever.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"1. First, do the thing...\\n1. Second, another thing...\\n1. And finally, you...\\n\")), mdx(\"p\", null, \"is rendered as \\uD83D\\uDC47\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"First, do the thing...\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Second, another thing...\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"And finally, you...\")), mdx(\"p\", null, \"That's it!\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Markdown tip: numbered list","date":"29 Nov 21","tags":["markdown"]}}},"pageContext":{"slug":"/markdown-tip-numbered-list/"}},
    "staticQueryHashes": ["3649515864"]}