{"head":{"title":"Install zsh on Mac without homebrew","date":"2016-07-28T00:00:00.000Z","layout":"Post","tags":"mac","description":"I'm not a big supporter of Homebrew. It just doesn't solve any problems for me. I have only needed brew for zsh and maybe node (but forâ€¦"},"body":"<p>I'm not a big supporter of Homebrew. It just doesn't solve any problems for me. I have only needed brew for <code>zsh</code> and maybe <code>node</code> (but for that I could use <a href=\"https://github.com/creationix/nvm\"><code>nvm</code></a> or <a href=\"https://github.com/tj/n\"><code>n</code></a>). I don't want to install brew just for those when they can be set up easily. Seems like a lot of overhead just for one function.</p>\n<p>That said, I had a lot of trouble finding how to get <code>zsh</code> installed without <code>brew</code>. Seems like a lot of people have bought into it for what that it offers.</p>\n<p>So here's how I installed <code>zsh</code> on my machine without brew.</p>\n<ol>\n<li>\n<p>Get the source tarball (<code>zsh-*.tar.gz</code>) from <a href=\"http://zsh.sourceforge.net/Arc/source.html\">zsh.org</a></p>\n</li>\n<li>\n<p>Unpack the file</p>\n<pre><code class=\"hljs language-sh\">tar xzf zsh-5.2.tar.gz</code></pre>\n</li>\n<li>\n<p>Build the binary. This will install <code>zsh</code> under <code>/usr/local/bin/zsh</code></p>\n<pre><code class=\"hljs language-sh\">./configure &#x26;&#x26; make &#x26;&#x26; make <span class=\"hljs-built_in\">test</span> &#x26;&#x26; make install</code></pre>\n<ul>\n<li>The version of <code>zsh</code> that ships on Mac machines is outdated, thus why its necessary to build the binary.</li>\n<li>You may get an error message saying <code>install: /usr/local/bin/zsh-5.2: Permission denied</code>. If so, you will need to <code>sudo make install</code> instead.</li>\n</ul>\n</li>\n<li>\n<p>You now have <code>zsh</code> installed and working on your system. Begin configuring it by running <code>zsh</code> in your terminal; you'll see a series of prompts to enable and disable features to your liking.</p>\n</li>\n<li>\n<p>Next, you'll want to also install <a href=\"https://github.com/robbyrussell/oh-my-zsh\"><code>oh-my-zsh</code></a>. It makes zsh even more awesome by building in additional plugins and themes. This was the install script at the time of this writing.</p>\n<pre><code class=\"hljs language-sh\">sh -c <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>\"</span></code></pre>\n<ul>\n<li>NOTE: you should read the contents of <code>install.sh</code> before directly piping it into your shell. Ya know, because security.</li>\n</ul>\n</li>\n<li>\n<p>Customize your heart out! Become familiar with the themes and plugins now available to you. Enable those which you might use most.</p>\n</li>\n<li>\n<p>Make sure everything works. I had exported some paths in my <code>~/.bash_profile</code> file, and needed to copy those over to <code>~/.zshrc</code>.</p>\n<ul>\n<li>For some reason, <code>nvm</code> was one of those things that I couldn't get to work quite right. I tried adding the paths to the zsh profile, making sure <code>$NVM_DIR</code> was correctly set, etc. Reinstalling was the only way I got it to work again.</li>\n</ul>\n</li>\n<li>\n<p>For these changes to persist, you'll have to change your default shell. The easiest is to just access the setting through the UI. You could do this with a terminal command, so Google it.</p>\n<ul>\n<li>Open \"System Preferences\"</li>\n<li>Click on \"Users &#x26; Groups\"</li>\n<li>Unlock the settings by clicking on the padlock and entering your password.</li>\n<li>CTRL + Click on your user and select \"Advanced options...\"</li>\n<li>Choose <code>/bin/zsh</code> from the <em>Login shell</em> dropdown</li>\n<li>Click OK to complete</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"bonus\"><a href=\"#bonus\" class=\"phenomic-HeadingAnchor\">#</a>Bonus</h2>\n<p>Don't let the fun end there. Here's a few more things you can do to further refine your terminal to your liking.</p>\n<h4 id=\"disable-last-login-banner\"><a href=\"#disable-last-login-banner\" class=\"phenomic-HeadingAnchor\">#</a>Disable 'last login' banner</h4>\n<p>When I open up the terminal I see a line at the top saying something like</p>\n<blockquote>\n<p>Last login: Mon Jan 1 12:00:00 on ttys004</p>\n</blockquote>\n<p>This information is not very relevant to me, so I'd rather not see it. Silence this message by simply creating a <code>.hushlogin</code> file.</p>\n<pre><code>touch ~/.hushlogin\n</code></pre>\n<h4 id=\"disable-the-user-banner\"><a href=\"#disable-the-user-banner\" class=\"phenomic-HeadingAnchor\">#</a>Disable the user banner</h4>\n<p>You can disable the user banner by simply adding <code>DEFAULT_USER=\"yourusername\"</code> to your profile file.</p>\n<h4 id=\"get-a-better-font\"><a href=\"#get-a-better-font\" class=\"phenomic-HeadingAnchor\">#</a>Get a better font</h4>\n<p>I quickly became a fan of the Agnoster theme, but it required patched fonts (<a href=\"https://github.com/powerline/fonts\">Powerline fonts</a>) to be installed in order to display some of the special characters it uses (eg. git icons). I'm a fan of Source Code Pro, but I've also heard great things about Meslo, Inconsolata, and Terminus.</p>\n","__filename":"posts/Install-zsh-on-Mac-without-homebrew.md","__url":"/posts/Install-zsh-on-Mac-without-homebrew/","__resourceUrl":"/posts/Install-zsh-on-Mac-without-homebrew/index.html","__dataUrl":"/posts/Install-zsh-on-Mac-without-homebrew/index.html.a260797a8dbf85fe07f9680de973da4b.json"}